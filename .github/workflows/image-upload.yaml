name: Upload-docker-image-to-ACR
on: [ workflow_dispatch ]
permissions:
  contents: read
  id-token: write
env:
  REPOSITORY: acrogsdwqr3oofp2
jobs:
  upload-images:
    runs-on: ubuntu-latest
    steps: 
      # Checks out the repository this file is in
      - uses: actions/checkout@v4
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      # Use the Azure credentials to log into the ACR
      # Uses '--expose-token' because docker isn't exposed to the azure/cli container so it just needs to write the token out
      - name: ACR Login
        id: acr_login
        uses: azure/cli@v2
        with: 
          azcliversion: latest
          inlineScript: az acr login --name ${{ env.REPOSITORY }} --expose-token
      # Take the token generated by 'az acr login' and pass it to docker login
      # https://learn.microsoft.com/en-us/azure/container-registry/container-registry-authentication?tabs=azure-cli#az-acr-login-with---expose-token
      - run: docker login ${{ env.REPOSITORY }}.azurecr.io --username 00000000-0000-0000-0000-000000000000 --password-stdin <<< $TOKEN
        env:
          TOKEN: ${{ steps.acr_login.outputs.stdout }}
      
      # Run the docker commands
      - name: Docker load
        run: docker load -i ./images/alpine_3.20.tar
      - name: Docker tag
        run: docker tag alpine:3.20 ${{ env.REPOSITORY }}.azurecr.io/alpine:3.20
      - name: Docker push
        run: docker push ${{ env.REPOSITORY }}.azurecr.io/alpine:3.20
